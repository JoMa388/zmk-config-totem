#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    quick-tap-ms = <175>;
    flavor = "balanced";
    require-prior-idle-ms = <150>;
    hold-trigger-key-positions = <35 36 37 26 27 28 29 19 30 5 6 7 8 9 15 16 17 18 19 26 27 28 29 30 31 37>;
    hold-trigger-on-release;
};
// Alt + Tab Swapper 
ZMK_TRI_STATE(Swapper),
    bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
/ {
    combos {
        compatible = "zmk,combos";

        LetterQ {
            bindings = <&kp Q>;
            key-positions = <0 1>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <14 15 16>;
        };

        semicolon {
            bindings = <&kp SEMI>;
            key-positions = <17 16>;
        };

        Copy {
            bindings = <&kp LC(C)>;
            key-positions = <20 21>;
        };

        Paste {
            bindings = <&kp LC(V)>;
            key-positions = <21 22>;
        };

        Cut {
            bindings = <&kp LC(X)>;
            key-positions = <19 20>;
        };

        Undo {
            bindings = <&kp LC(Z)>;
            key-positions = <18 19>;
        };
    };

    behaviors {
        Number1: Number1 {
            compatible = "zmk,behavior-tap-dance";
            label = "NUMBER1";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_1>, <&kp EXCL>;
        };

        Number2: Number2 {
            compatible = "zmk,behavior-tap-dance";
            label = "NUMBER2";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_2>, <&kp AT_SIGN>;
        };

        Number3: Number3 {
            compatible = "zmk,behavior-tap-dance";
            label = "NUMBER3";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_3>, <&kp HASH>;
        };

        Number4: Number4 {
            compatible = "zmk,behavior-tap-dance";
            label = "NUMBER4";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_4>, <&kp DOLLAR>;
        };

        Number5: Number5 {
            compatible = "zmk,behavior-tap-dance";
            label = "NUMBER5";
            #binding-cells = <0>;
            bindings = <&kp N5>, <&kp PERCENT>;
        };

        BSPC_deleteWord: BSPC_deleteWord {
            compatible = "zmk,behavior-tap-dance";
            label = "BSPC_DELETEWORD";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            bindings = <&kp BACKSPACE>, <&kp LC(BSPC)>;
        };

        Number6: Number6 {
            compatible = "zmk,behavior-tap-dance";
            label = "NUMBER6";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_6>, <&kp CARET>;
        };

        Number7: Number7 {
            compatible = "zmk,behavior-tap-dance";
            label = "NUMBER7";
            #binding-cells = <0>;
            bindings = <&kp N7>, <&kp AMPS>;
        };

        Number8: Number8 {
            compatible = "zmk,behavior-tap-dance";
            label = "NUMBER8";
            #binding-cells = <0>;
            bindings = <&kp N8>, <&kp ASTRK>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
            &kp W       &kp F        &kp P        &kp B      &kp J             &kp L         &kp U        &kp Y
&mt LGUI A  &mt LALT R  &mt LCTRL S  &mt LSHFT T  &kp G      &kp M             &mt RSHIFT N  &mt RCTRL E  &mt RALT I  &mt RGUI O
&kp Z       &kp X       &kp C        &kp D        &kp V      &kp K             &kp H         &kp COMMA    &kp DOT     &kp SINGLE_QUOTE
                        &kp ESC      &lt 1 TAB    &kp SPACE  &BSPC_deleteWord  &kp ENTER     &lt 2 ESC
            >;
        };

        Symbol {
            bindings = <
          &kp TILDE  &kp GRAVE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS
&Number1  &Number2   &Number3   &Number4          &Number5           &kp MINUS             &kp PLUS        &kp EQUAL        &kp COLON              &kp SEMI
&Number6  &Number7   &Number8   &kp N9            &kp N0             &kp UNDER             &kp SLASH       &kp BACKSLASH    &kp PIPE               &kp QUESTION
                     &trans     &trans            &trans             &kp DELETE            &trans          &mo 3
            >;
        };

        VIM {
            bindings = <
        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 3  &trans  &trans    &trans    &trans  &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT   &trans
&trans  &trans        &trans        &trans        &trans  &trans    &trans    &trans  &trans      &trans
                      &trans        &trans        &trans  &trans    &trans    &trans
            >;
        };

        Function {
            bindings = <
        &kp F11  &kp F12      &kp F13  &kp F14  &kp F15       &kp F16  &kp F17  &kp F18
&kp F1  &kp F2   &kp F3       &kp F4   &kp F5   &kp C_VOL_UP  &trans   &trans   &trans   &trans
&kp F6  &kp F7   &kp F8       &kp F9   &kp F10  &kp C_VOL_DN  &trans   &trans   &trans   &trans
                 &bootloader  &trans   &trans   &trans        &trans   &trans
            >;
        };
    };
};
